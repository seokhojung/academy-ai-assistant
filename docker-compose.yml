version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: academy_db
    environment:
      POSTGRES_DB: academy_db
      POSTGRES_USER: academy_user
      POSTGRES_PASSWORD: academy_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U academy_user -d academy_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - academy_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: academy_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - academy_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: academy_backend
    environment:
      - DATABASE_URL=postgresql://academy_user:academy_password@postgres:5432/academy_db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here
      - FIREBASE_PROJECT_ID=your-firebase-project-id
      - GEMINI_API_KEY=your-gemini-api-key
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/__pycache__
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - academy_network
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: academy_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_FIREBASE_API_KEY=your-firebase-api-key
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your-project.firebaseapp.com
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=your-firebase-project-id
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=your-project.appspot.com
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=123456789
      - NEXT_PUBLIC_FIREBASE_APP_ID=your-firebase-app-id
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - academy_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: academy_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - academy_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  academy_network:
    driver: bridge 